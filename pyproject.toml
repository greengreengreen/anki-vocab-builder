[tool.poetry]
name = "anki-vocab-builder"
version = "0.1.0"
description = ""
authors = ["greengreengreen <gxxuan71@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.2.3"
genanki = "^0.13.1"
requests = "^2.32.3"
pynput = "^1.7.7"
gtts = "^2.5.4"
pystray = "^0.19.5"
openai = "^1.12.0"
python-dotenv = "^1.0.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=anki_vocab_builder --cov-report=term-missing"

[tool.coverage.run]
source = ["anki_vocab_builder"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError"
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/tests/fixtures/
^/venv/
^/.pytest_cache/
^/.mypy_cache/
^/__pycache__/
^/build/
^/dist/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [
    "tests/fixtures",
    "venv",
    ".pytest_cache",
    ".mypy_cache",
    "__pycache__",
    "build",
    "dist"
]
